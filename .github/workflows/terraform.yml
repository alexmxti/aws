name: Terraform CI/CD

on:
  pull_request:
    branches: 
      - main
    paths: 
      - "aws-account-management/**/*.tf"
  push:
    branches:
      - main
    paths:
      - aws-account-management/**/*.tf"
     
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write
  security-events: write
  actions: read

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed_dirs: ${{ steps.filter.outputs.directories }}
    steps:
      - name: Checkout GitHub Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed directories
        id: filter
        run: |
          DIRS=$(git diff --diff-filter=d --name-only origin/${{ github.base_ref }} | grep '/' | grep -vE '^\.+' | cut -d/ -f1 | sort -u | jq -R -s -c 'split("\n")[:-1]')
          echo "Detected changes in: $DIRS"
          echo "directories=$DIRS" >> $GITHUB_ENV
          echo "directories=$DIRS" >> $GITHUB_OUTPUT

  terraform-ci:
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ${{ fromJson(needs.detect-changes.outputs.changed_dirs) }}
    if: ${{ needs.detect-changes.outputs.changed_dirs != '[]' }}
    env:
      TERRAFORM_VERSION: "1.10.5"
    steps:
      - name: Checkout GitHub Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: ${{ secrets.AWS_ROLE_SESSION_NAME }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Format
        run: terraform fmt --check
        working-directory: ${{ matrix.directory }}

      - name: Cache Plugin Dir
        uses: actions/cache@v4
        with:
          path: ~/.tflint.d/plugins
          key: ubuntu-tflint-${{ hashFiles('.tflint.hcl') }}

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: latest

      - name: TFLint Init
        run: tflint --init

      - name: Run TFLint
        run: tflint -f compact
        working-directory: ${{ matrix.directory }}

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ matrix.directory }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ${{ matrix.directory }}

      - name: Terraform Plan
        run: terraform plan
        working-directory: ${{ matrix.directory }}

      - name: Trivy IaC Security Scanning
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'config'
          scan-ref: ${{ matrix.directory }}/
          hide-progress: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '0'
          severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'

      - name: Trivy Scan Debug
        run: cat trivy-results.sarif

      - name: Trivy Scan Results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  terraform-docs:
    needs: [detect-changes, terraform-ci]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ${{ fromJson(needs.detect-changes.outputs.changed_dirs) }}
    if: ${{ needs.detect-changes.outputs.changed_dirs != '[]' }}
    steps:
      - name:
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Generate Docs
        uses: terraform-docs/gh-actions@v1.3.0
        with:
          working-dir: ${{ matrix.directory }}
          output-file: README.md
          output-method: inject
          git-push: "true"

  # terraform-cd:
  #   needs: terraform-ci
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Terraform Apply
  #       uses: actions/checkout@v4
  #       with:
  #         ref: ${{ github.event.pull_request.head.ref }}

  #     - name: Terraform Apply
  #       if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #       run: terraform apply -auto-approve -input=false
