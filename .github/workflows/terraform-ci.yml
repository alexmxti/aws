name: Terraform CI/CD

on:
  pull_request:
    branches: ["main"]
    paths: 
      - "aws-account-management/**/*.tf"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed_dirs: ${{ steps.filter.outputs.directories }}
    steps:
      - name: Checkout GitHub Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed directories
        id: filter
        run: |
          DIRS=$(git diff --diff-filter=d --name-only origin/${{ github.base_ref }} | grep '/' | cut -d/ -f1 | sort -u | jq -R -s -c 'split("\n")[:-1]')
          echo "Detected changes in: $DIRS"
          echo "directories=$DIRS" >> $GITHUB_ENV
          echo "directories=$DIRS" >> $GITHUB_OUTPUT

  terraform-ci:
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ${{ fromJson(needs.detect-changes.outputs.changed_dirs) }}
    if: ${{ needs.detect-changes.outputs.changed_dirs != '[]' }}
    env:
      AWS_REGION: "eu-west-2"
      TERRAFORM_VERSION: "1.10.5"
    steps:
      - name: Checkout GitHub Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Format
        run: terraform fmt --check
        working-directory: ${{ matrix.directory }}

      - name: Cache Plugin Dir
        uses: actions/cache@v4
        with:
          path: ~/.tflint.d/plugins
          key: ubuntu-tflint-${{ hashFiles('.tflint.hcl') }}

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: latest

      - name: TFlint Init
        run: tflint --init

      - name: Run TFLint
        run: tflint -f compact
        working-directory: ${{ matrix.directory }}

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ matrix.directory }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ${{ matrix.directory }}

      - name: Terraform Plan
        run: terraform plan
        working-directory: ${{ matrix.directory }}

      - name: Trivy Security Scanning
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: "fs"
          scan-ref: "${{ matrix.directory }}"
          trivy-config: trivy.yaml

      - name: Generate Docs
        uses: terraform-docs/gh-actions@v1.3.0
        with:
          working-dir: ${{ matrix.directory }}
          output-file: README.md
          output-method: inject
          git-push: "true"

  terraform-apply:
    needs: detect-changes
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'  # Only runs when triggered manually   
    strategy:
      matrix:
        directory: ${{ fromJson(needs.detect-changes.outputs.affected_dirs) }}
    env:
      AWS_REGION: "eu-west-2"
      TERRAFORM_VERSION: "1.10.5"

    steps:
      - name: Checkout GitHub Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: GitHubTerraformDeployment

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ matrix.directory }}

      - name: Terraform Apply (Manual Trigger Only)
        run: terraform apply -auto-approve
        working-directory: ${{ matrix.directory }}