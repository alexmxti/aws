name: Terraform CD

env:
  TERRAFORM_VERSION: "1.10.5"

on:
  push:
    branches:
      - main
      
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed_dirs: ${{ steps.filter.outputs.directories }}
    steps:
      - name: Checkout GitHub Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set Diff Base
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "BASE=origin/${{ github.base_ref }}" >> $GITHUB_ENV
          else
            echo "BASE=${{ github.event.before }}" >> $GITHUB_ENV
          fi

      - name: Detect changed directories
        id: filter
        run: |
          DIRS=$(git diff --diff-filter=d --name-only ${{ github.event.before }} HEAD | grep '/' | grep -vE '^\.+' | cut -d/ -f1 | sort -u | jq -R -s -c 'split("\n")[:-1]')
          echo "Detected changes in: $DIRS"
          echo "directories=$DIRS" >> $GITHUB_ENV
          echo "directories=$DIRS" >> $GITHUB_OUTPUT

  terraform-deploy:
    needs: detect-changes
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    strategy:
      matrix:
        directory: ${{ fromJson(needs.detect-changes.outputs.changed_dirs) }}

    steps:
      - name: Checkout GitHub Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: ${{ secrets.AWS_ROLE_SESSION_NAME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ matrix.directory }}

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
        working-directory: ${{ matrix.directory }}
        